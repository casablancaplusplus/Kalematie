_getQuoteCollection_() :

There are two types of quote collection,
(1)--> a collection of quotes that belong to a specific author
(2)--> a collection of quotes that doesn't belong to a specific author


(1)---> to get this type of collection we need the author id. So, If the authorId
        parameters was set to a valid value, the fetched quotes should belong
        to that author.
        options are :
        author id          --> authorId(int, required)
        limit(number, required) --> the number of quotes to be fetched
                                    this number should be less than 20
        start(number, optional) --> the start of the quotes
                                    if zero, the quotes are fetched from 
                                        the beginning
        top rated quotes   --> topRating(bool)
        most faved quotes  --> mostFaved(bool)
        favorite quotes    --> favorites(bool)
        original quotes    --> original(bool)


(2)---> this type of collection is returned if the author id was not set.
        options are :
        minRating(double)
        maxRating(double)
        limit(number, required) --> number of quotes to fetch
        startId(int, required) --> the start quote
        original(bool)
        favorites(bool) --> this is the clients favorite quotes which will need
                            registration in order to work
        mostFaved(bool)
        topRating(bool)



=========================================================================================

authentication :

(1) --> registration
(2) --> access token creation
(3) --> access token invalidation


(1) --> registration : It can be done via phone number and email.
        phone number regsitration : --> the user sends their phone number to the server ( needs a dedicated resource )
                                    --> the server validates the phone number, generates a password and sends it to the user via sms
                                    --> the user then uses their phone number and recieved password to create a base64 encoded string
                                        and send it to the server to retrieve an access token.
        email registration : --> the user sends their email to the server ( needs a dedicated resource)
                             --> the server validates the emails format, generates a password and sends it to the email of the user
                             --> the user then uses thier email and recieved password to create a base64 encoded string
                                 and send it to the server to retrieve an access token.
        class registration
